###########################################################################################################################
# Copyright (c) 2023, ANTOBOT LTD.
# All rights reserved.

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # 
# Description: 	parameters used for global standalone costmap (use with am_costmap_2d)      	  
# Contacts:     soyoung.kim@antobot.ai
# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

#beyond this distance (in meters), the obstacle will not be put into the costmap.
obstacle_range: 10  # in real it's 10 m, but that reduces the complexity

#The range at which sensor data is kept at higher resolution.
raytrace_range: 12

#The maximum height of any obstacle to be inserted into the costmap in meters. This parameter should be set to be slightly higher than the height of your robot.
max_obstacle_height: 3.0 #meters

footprint: [[-0.62, -0.44], [0.62, -0.44], [0.62, 0.44], [-0.62, 0.44]]
robot_radius: 0.1 # robot radius should be small as 0.1 for updated Lathcoats 

static_layer:
    enabled: false
    map_topic: /map 
    subscribe_to_updates: true

# The obstacle layer tracks the obstacles as read by the sensor data.    
# For global costmap, set inf_is_valid as false to keep the obstacle on the map even when the sensor doesn't see the obstacle. 
obstacle_layer:
    enabled: true
    combination_method: 1 
    observation_sources: pcl_front_laser_scan_sensor pcl_back_laser_scan_sensor 3d_lidar_sensor #gazebo_mobile_camera
    pcl_front_laser_scan_sensor: {sensor_frame: zed2_front_left_camera_frame, data_type: LaserScan, topic: /camera/scan/front, marking: true, clearing: true, min_obstacle_height: -5.0, max_obstacle_height: 5.0, inf_is_valid: false, obstacle_range: 9.5, raytrace_range: 10.0}
    pcl_back_laser_scan_sensor: {sensor_frame: zed2_back_left_camera_frame, data_type: LaserScan, topic: /camera/scan/back, marking: true, clearing: true, min_obstacle_height: -5.0, max_obstacle_height: 5.0, inf_is_valid: false, obstacle_range: 9.5, raytrace_range: 10.0}
    3d_lidar_sensor: {sensor_frame: laser_link, data_type: PointCloud2, topic: /lslidar_point_cloud, marking: true, clearing: true, min_obstacle_height: -0.1, max_obstacle_height: 1.0, obstacle_range: 15.0, raytrace_range: 16.0}
    gazebo_mobile_camera: {sensor_frame: zed2_front_left_camera_optical_frame, data_type: PointCloud2, topic: /mobile_base/zed2_front/point_cloud/cloud_registered, marking: true, clearing: true, min_obstacle_height: -0.1, max_obstacle_height: 1.0, obstacle_range: 15.0, raytrace_range: 16.0}
inflation_layer:
    enabled: true
    cost_scaling_factor:  5.0  # exponential rate at which the obstacle cost drops off (default: 10)
    inflation_radius:   0.2  # max. distance from an obstacle at which costs are incurred for planning paths.

global_frame: map
robot_base_frame: base_link

#update_frequency parameter determines the frequency, in Hz, at which the costmap will run its update loop
update_frequency: 5.0
#publish_frequency parameter determines the rate, in Hz, at which the costmap will publish visualization information.
publish_frequency: 2.0

#rolling_window parameter to true means that the costmap will remain centered around the robot as the robot moves through the world
rolling_window: true
always_send_full_costmap: true

#The width, height,and resolution parameters set the width (meters), height (meters), and resolution (meters/cell) of the costmap
width: 50.0
height: 50.0
resolution: 0.1

# For global costmap, we use costmap_2d instead of am_costmap_2d. am_costmap_2d clears the costmap every time it updates.
# am_costmap_2d is only used for local costmap with global_frame set as base_link.
plugins: 
- {name: obstacle_layer,    type: "am_costmap_2d::am_ObstacleLayer"}
- {name: inflation_layer, type: "am_costmap_2d::InflationLayer"}
